= Host-specific information ====================================================
$> hostname; uname -msr
f0r4s19.codam.nl
Darwin 18.7.0 x86_64
$> date
Thu Nov 25 16:28:27 CET 2021
$> gcc --version
Apple clang version 11.0.0 (clang-1100.0.33.8)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
$> clang --version
Apple clang version 11.0.0 (clang-1100.0.33.8)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin

= libft.h=======================================================================
$> norminette libft.h | grep -E '(Error|Warning)'

= Compiling libft ==============================================================
$> make re
rm -rf obj/
rm -f libft.a
cc -Wall -Wextra -Werror -I./ -c ft_isalpha.c -o obj/ft_isalpha.o
cc -Wall -Wextra -Werror -I./ -c ft_isdigit.c -o obj/ft_isdigit.o
cc -Wall -Wextra -Werror -I./ -c ft_isalnum.c -o obj/ft_isalnum.o
cc -Wall -Wextra -Werror -I./ -c ft_isascii.c -o obj/ft_isascii.o
cc -Wall -Wextra -Werror -I./ -c ft_isprint.c -o obj/ft_isprint.o
cc -Wall -Wextra -Werror -I./ -c ft_strlen.c -o obj/ft_strlen.o
cc -Wall -Wextra -Werror -I./ -c ft_memset.c -o obj/ft_memset.o
cc -Wall -Wextra -Werror -I./ -c ft_bzero.c -o obj/ft_bzero.o
cc -Wall -Wextra -Werror -I./ -c ft_memcpy.c -o obj/ft_memcpy.o
cc -Wall -Wextra -Werror -I./ -c ft_memmove.c -o obj/ft_memmove.o
cc -Wall -Wextra -Werror -I./ -c ft_strlcpy.c -o obj/ft_strlcpy.o
cc -Wall -Wextra -Werror -I./ -c ft_strlcat.c -o obj/ft_strlcat.o
cc -Wall -Wextra -Werror -I./ -c ft_toupper.c -o obj/ft_toupper.o
cc -Wall -Wextra -Werror -I./ -c ft_tolower.c -o obj/ft_tolower.o
cc -Wall -Wextra -Werror -I./ -c ft_strchr.c -o obj/ft_strchr.o
cc -Wall -Wextra -Werror -I./ -c ft_strrchr.c -o obj/ft_strrchr.o
cc -Wall -Wextra -Werror -I./ -c ft_strncmp.c -o obj/ft_strncmp.o
cc -Wall -Wextra -Werror -I./ -c ft_memchr.c -o obj/ft_memchr.o
cc -Wall -Wextra -Werror -I./ -c ft_memcmp.c -o obj/ft_memcmp.o
cc -Wall -Wextra -Werror -I./ -c ft_strnstr.c -o obj/ft_strnstr.o
cc -Wall -Wextra -Werror -I./ -c ft_atoi.c -o obj/ft_atoi.o
cc -Wall -Wextra -Werror -I./ -c ft_calloc.c -o obj/ft_calloc.o
cc -Wall -Wextra -Werror -I./ -c ft_strdup.c -o obj/ft_strdup.o
cc -Wall -Wextra -Werror -I./ -c ft_substr.c -o obj/ft_substr.o
cc -Wall -Wextra -Werror -I./ -c ft_strtrim.c -o obj/ft_strtrim.o
cc -Wall -Wextra -Werror -I./ -c ft_putchar_fd.c -o obj/ft_putchar_fd.o
cc -Wall -Wextra -Werror -I./ -c ft_strjoin.c -o obj/ft_strjoin.o
cc -Wall -Wextra -Werror -I./ -c ft_putstr_fd.c -o obj/ft_putstr_fd.o
cc -Wall -Wextra -Werror -I./ -c ft_putendl_fd.c -o obj/ft_putendl_fd.o
cc -Wall -Wextra -Werror -I./ -c ft_itoa.c -o obj/ft_itoa.o
cc -Wall -Wextra -Werror -I./ -c ft_putnbr_fd.c -o obj/ft_putnbr_fd.o
cc -Wall -Wextra -Werror -I./ -c ft_striteri.c -o obj/ft_striteri.o
cc -Wall -Wextra -Werror -I./ -c ft_strmapi.c -o obj/ft_strmapi.o
cc -Wall -Wextra -Werror -I./ -c ft_split.c -o obj/ft_split.o
hello world
ar rcs libft.a obj/ft_isalpha.o obj/ft_isdigit.o obj/ft_isalnum.o obj/ft_isascii.o obj/ft_isprint.o obj/ft_strlen.o obj/ft_memset.o obj/ft_bzero.o obj/ft_memcpy.o obj/ft_memmove.o obj/ft_strlcpy.o obj/ft_strlcat.o obj/ft_toupper.o obj/ft_tolower.o obj/ft_strchr.o obj/ft_strrchr.o obj/ft_strncmp.o obj/ft_memchr.o obj/ft_memcmp.o obj/ft_strnstr.o obj/ft_atoi.o obj/ft_calloc.o obj/ft_strdup.o obj/ft_substr.o obj/ft_strtrim.o obj/ft_putchar_fd.o obj/ft_strjoin.o obj/ft_putstr_fd.o obj/ft_putendl_fd.o obj/ft_itoa.o obj/ft_putnbr_fd.o obj/ft_striteri.o obj/ft_strmapi.o obj/ft_split.o

$> make bonus
make: *** No rule to make target `obj/ft_lstnew_bonus.o', needed by `bonus'.  Stop.

$> ls -la libft.a
-rw-r--r--  1 sbos  piscine  34880 Nov 25 16:28 /Users/sbos/Documents/Programming/Projects/libft/testers/libft-war-machine/dirlibft/libft.a

= Bonus_functions ==============================================================

= ft_lstnew_bonus.c ============================================================
$> norminette ft_lstnew_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstnew.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D

= ft_lstdelone_bonus.c =========================================================
$> norminette ft_lstdelone_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstdelone.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_lstclear_bonus.c ==========================================================
$> norminette ft_lstclear_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstclear.c main.c libft.a -o user_exe

Undefined symbols for architecture x86_64:
  "_ft_lstdelone", referenced from:
      _ft_lstclear in ft_lstclear-1470bc.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

= ft_lstadd_front_bonus.c ======================================================
$> norminette ft_lstadd_front_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstadd_front.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_lstadd_back_bonus.c =======================================================
$> norminette ft_lstadd_back_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstadd_back.c main.c libft.a -o user_exe

Undefined symbols for architecture x86_64:
  "_ft_lstlast", referenced from:
      _ft_lstadd_back in ft_lstadd_back-1325ec.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

= ft_lstsize_bonus.c ===========================================================
$> norminette ft_lstsize_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstsize.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_lstiter_bonus.c ===========================================================
$> norminette ft_lstiter_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstiter.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_lstmap_bonus.c ============================================================
$> norminette ft_lstmap_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstmap.c main.c libft.a -o user_exe

Undefined symbols for architecture x86_64:
  "_ft_lstclear", referenced from:
      _ft_lstmap in ft_lstmap-100465.o
  "_ft_lstnew", referenced from:
      _ft_lstmap in ft_lstmap-100465.o
     (maybe you meant: _ft_lstnewone)
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

= ft_lstlast_bonus.c ===========================================================
$> norminette ft_lstlast_bonus.c | grep -E '(Error|Warning)'
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_lstlast.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
